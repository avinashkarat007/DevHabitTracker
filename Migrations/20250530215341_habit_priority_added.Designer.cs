// <auto-generated />
using System;
using DevHabitTracker.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevHabitTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250530215341_habit_priority_added")]
    partial class habit_priority_added
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevHabitTracker.Entities.Habit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("DevHabitTracker.Entities.HabitTag", b =>
                {
                    b.Property<string>("HabitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedATUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("HabitId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("HabitTags");
                });

            modelBuilder.Entity("DevHabitTracker.Entities.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HabitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DevHabitTracker.Entities.HabitTag", b =>
                {
                    b.HasOne("DevHabitTracker.Entities.Habit", "Habit")
                        .WithMany("HabitTags")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevHabitTracker.Entities.Tag", "Tag")
                        .WithMany("HabitTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DevHabitTracker.Entities.Tag", b =>
                {
                    b.HasOne("DevHabitTracker.Entities.Habit", null)
                        .WithMany("Tags")
                        .HasForeignKey("HabitId");
                });

            modelBuilder.Entity("DevHabitTracker.Entities.Habit", b =>
                {
                    b.Navigation("HabitTags");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("DevHabitTracker.Entities.Tag", b =>
                {
                    b.Navigation("HabitTags");
                });
#pragma warning restore 612, 618
        }
    }
}
